<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World——写在最开始的地方</title>
    <url>/posts/3eeb.html</url>
    <content><![CDATA[<p>随便写一些置顶吧，实际上也没什么好说的，我会在这个博客里记录一些自己的生活日常，所思所想，以及学习笔记。</p>
<p>说实话很久以前就有创建属于自己网站的想法，只是困于技术和财力，迟迟都没动手，现在知道了可以这么做于是就有了这个blog。</p>
<p>做的不好，大多还是模板里的内容，不太敢改些花里胡哨的，大抵我现在技术力也就这样，恳请各位大佬轻喷。</p>
<p>我自己会不定时地来看看，加一些东西或者改一些东西，主要看有没有空余时间了。</p>
<p>也欢迎各位路过的看客到评论区留言哦。<span class="github-emoji" data-alias="wink" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8">😉</span> <span id="more"></span></p>
<hr />
<h1 id="hello-world">Hello World!</h1>
<p>随便先改一改Hello World. 突然记起来当年在洛谷进去第一题Hello World!我交了三遍才过来着，不过这回就不用看人家机器给不给过了。 想了半天底下这一票要不要删，打算先留着了，毕竟不舍得扔东西删东西也是老习惯了。</p>
<hr />
<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="quick-start">Quick Start</h2>
<h3 id="create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>生活馆</category>
        <category>空想家</category>
        <category>自习室</category>
      </categories>
      <tags>
        <tag>Hello world!</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建的记录</title>
    <url>/posts/739d.html</url>
    <content><![CDATA[<h1 id="从头说起">从头说起</h1>
<p>前一段时间某一天我在Google上偶然看到了<a href="https://cekavis.github.io/">t老师的blog</a>，于是突发奇想：“要不我也搭一个吧？”于是就有了这Anony's Blog。</p>
<h1 id="月3日">12月3日</h1>
<p>实际上已经四号了来着，跟着<a href="https://zhuanlan.zhihu.com/p/102592286">知乎</a>和<a href="https://www.bilibili.com/video/BV1mU4y1j72n">Bilibili</a>两位大佬的教程开始搞。</p>
<p>结果只完成了安装nodejs和配置npm环境两个步骤，中途疯狂报错“The operation was rejected by your operating system.” Google上找的方法都没用，后来才发现原来就是没权限，于是就解决了。 <span id="more"></span></p>
<h1 id="月4日">12月4日</h1>
<p>今天把Git，Hexo，Github都配置好了，也是第一次能从网上看到这个blog网页了（虽说只是Hexo默认的）。然后就开始选主题，期间一边和<a href="https://fffeiya.github.io/">FFFeiya</a>语音，一边浏览他们信奥巨巨们的blog，看到好多年久失修的，当然也有一直在维护，让我非常喜欢的，比如<a href="https://vsh-fd.github.io/">星官姐姐</a>。</p>
<h1 id="月5日">12月5日</h1>
<p>最后还是决定用最淳朴的next模板，把标题菜单设置好，稍微添加了一些内容（比如现在这篇），然后就没了，剩下的明天再做了。</p>
<p>今日脑瘫：设置搜索的时候没找到主题配置文件里搜索的位置，上千行的配置文件上上下下读了两遍，眼睛都花了才记起来有搜索功能可以用。</p>
<h1 id="月6日">12月6日</h1>
<p>想摸鱼了呜呜呜。先休息一会儿做点规划吧。今天打算把菜单栏优化一下，可以预见的一定会碰壁。</p>
<p>结果先加了个live2d，点名批评Live2d Viewer，上来就把我电脑搞死机了。原本想着把<a href="https://www.bilibili.com/video/BV1wV411B7N4">可莉的l2d</a>搬进来的，结果试了半天搞不定只好作罢orz。于是只是加了这么一位看板娘，如果以后学会加l2d的方法的话再改吧。</p>
<p>好耶今天的活算是做完了吧，改造了一下菜单栏，顶上就可以直接访问三个分类了。网上完全没找到类似的教程只能自己摸，最后发现主题配置文件的菜单栏里menu一块这样写就可以直接跳转专门的类别啦。 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">life:</span> <span class="string">/categories/生活馆/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-route</span></span><br><span class="line">  <span class="attr">thoughts:</span> <span class="string">/categories/空想家/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-lightbulb</span></span><br><span class="line">  <span class="attr">notes:</span> <span class="string">/categories/自习室/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-book</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure> 然后把home和categories给删了也是，home直接点击anony's blog图标就行，categories被三个子栏目代替了，这样至少我觉得很不错。然后图标是<a href="https://fontawesome.com/v5.15/icons?d=gallery&amp;p=2">Font Awesome</a>找的。</p>
<p>打算最后再弄一下l2d看看，其他工作就明天再来吧。</p>
<p>结果是l2d没弄，把评论系统搞上去了，总体就是Valine注册一下，然后找到主题配置里的comments-Valine就好了，很方便。</p>
<p>好了好了该摸了。</p>
<p>好吧又加了一个表情支持，测试一下<span class="github-emoji" data-alias="persevere" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f623.png?v8">😣</span></p>
<p>好诶<span class="github-emoji" data-alias="tada" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">🎉</span><span class="github-emoji" data-alias="tada" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">🎉</span><span class="github-emoji" data-alias="tada" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">🎉</span>。Mark一下<a href="https://www.webfx.com/tools/emoji-cheat-sheet/">Emoji Cheat Sheet</a>。</p>
<p><a href="https://anonyzzz.github.io/404">404页面</a>完成，稍微玩了一下，说实话看排版会很怪，不过我也不知道该怎么改，算了。</p>
<p>今天算是把博客基本上大体轮廓都搭完了吧，后面就是些缝缝补补，美化的工作了。挺好。</p>
<p>加上了头像和网页最下方心心的动画，中途出了bug，本地是好的，传到网上显示没有改动，又重新做了一遍就好了。</p>
<h1 id="月7日">12月7日</h1>
<p>改了一个名字“Anony的角落”，也没什么新意，主要是想了一晚上也没想出一个好点的中文昵称。</p>
<p>然后加了一些东西，社交链接，RSS，建站统计，字数，阅读时间统计，阅读进度提示条……</p>
<p>然后就是紧张刺激的修bug环节，在第一次上传之后出现了俩bug,一个是原本应该出现在右上角的github banner出现在了左上角，这是我在本地测试从来没碰到过的，我想着我也没有改什么东西，就很奇怪。另一个bug是“Hello World”文章的字数统计和时间统计显示“本文字数： |阅读时长≈NaN:aN”，网页最底下同样，这个问题倒是在本地测试也出现的问题，当时想着反正这统计也只是估算，如果发上去还是不行就把功能删了。然后我先在本地重新测了一遍，再Hexo clean,重新把文件全部传上去，刷新了半天发现banner还是在左上角，心想凉了，干脆把它一起也删了，结果回头瞥见“Hello World”的字数统计反而是好了，当时我人是懵的，在那里花式点击github banner，然后又把页面往下拉，发现代码块的复制也错位了，然后我点了一下，结果莫名其妙的它们就都回去了。于是网站就这么莫名其妙的恢复正常了……后来想来，也许是博客没加载清楚？</p>
<p>然后好好编辑了一下footer，把powered移到了最底下，顺便加了一个换行，在footer.swig里面加上 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure> 就能换一行。</p>
<p>好啦差不多就这样，基本上已经定型了，摸了摸了。</p>
<h1 id="月8日">12月8日</h1>
<p>试图加入多语言切换，由于技术问题和准备问题，出来一个没卵用还有bug的功能orz。</p>
<p>实在多看了几眼决定还是把底部的字数统计给删了，有点杂。</p>
<p>选了好久的背景图最后发现还是黑白的好看，那还是干净一些吧。</p>
<p>在sidebar增加了网易云播放器，但不知道为什么单首歌没问题，放歌单我就加载不出来，也不是版权问题，就很奇怪。好吧是Letter Song的锅，删了就好了，但它在浏览器正常放没问题，一进外链就炸我也不懂了。好的繁华唱遍也是一样的问题，然后最奇怪的是流年如歌，它在浏览器里播放错误，但外链是好的，人已经傻掉，不过反正弄好了就行，歌单大概会不定期更新吧。</p>
<p>感觉也想不到什么可以加的了，之后想到了再更新啦。</p>
<p>哦对忘记添加公式输入支持了，测试一下： <span class="math display">\[ \sum_{i=1}^{n}i^2=\frac{n(n+1)(2n+1)}{6}. \]</span> 好诶成功了，过程有够惊险的，一开始就是启用了mathjax，然后发现本地测试疯狂报错，于是查了一下发现要装hexo-renderer-pandoc，装好了结果还是显示不出，回到配置文件才发现还有这么几句： <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure> 加了mathjax: true之后就能用了。最后又在插入LaTeX的语法上挣扎了一下，所幸是成功了。</p>
<p>最后测试一下图片吧。<img src="../images/favicon.jpg" alt="这是头像" /> 好耶。</p>
]]></content>
      <categories>
        <category>生活馆</category>
      </categories>
      <tags>
        <tag>日记</tag>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Happy New Year！</title>
    <url>/posts/defb.html</url>
    <content><![CDATA[<h1 id="新年快乐">新年快乐！</h1>
<h2 id="加油吖">2022加油吖！</h2>
]]></content>
      <categories>
        <category>生活馆</category>
      </categories>
      <tags>
        <tag>2022</tag>
      </tags>
  </entry>
  <entry>
    <title>记墨大2022 O-week</title>
    <url>/posts/e657.html</url>
    <content><![CDATA[<p>​ 好啦，不知道为什么Typora出了点bug，在more前面打字会变成奇怪的东西，不管了，大不了剪切上去。这算是我建这个blog以来第一篇文章（流水账）吧，主要是放假也确实没什么好写的，开学之后大概更的会多一点（如果有空的话）。</p>
<span id="more"></span>
<p>2月21日</p>
<p>​ 今天实际上跟我没什么关系，差不多就是待在家里，继续摸摸鱼。学校有一个欢迎视频，没兴趣，就不看了。大概主要还是星期三星期四去学校看看有什么好玩的吧。</p>
<p>2月22日</p>
<p>​ 2022.2.22 正月廿二星期二纪念</p>
<p>​ 今天参加了俩线上getting started的活动，差不多也都是之前就知道的反复炒冷饭罢了（明天subject expo也差不多大概）。唯一还不错的点是作息稍微正常了些orz。看明天啦。</p>
<p>2月23日</p>
<p>​ 大概今天的关键词就是挤和热吧，到学校十点二十几分，结果Uri跑到the Spot去回来晚了些，然后在学校稍微走了走才发现Glyn Davis门口已经排了巨长的队，大概welcome presentation开始已经差不多11：20了（原本说是11：00）……</p>
<p>​ 然后结束后就是出去Subject Expo以及吃午饭，实际上差不多就是自由活动了，和Uri去找Engineering B，问Subject Expo这边的一个工作人员，结果他说他也不知道，就很蠢……后来是问了Union House的人他告诉我们在哪。去逛了逛校园，走了点小路，妄想走捷径结果绕了远路也是够sb……</p>
<p>​ 回来吃午饭，吃的Pasta，挺不错。然后……就没有然后了。</p>
<p>​ 基本上学校里人都挤在露天，外面很热，室内有空调就舒服。而且室内也没多少人就很不错。</p>
<p>2月24日</p>
<p>​ 本来看着昨天那么热决定少穿一点，结果看天气预报说要下雨人傻了……不过好在最后并没有下雨，只是天气阴阴的也不热，就比昨天好。今天主要就是个Peer Mentor Group，两个mentor都是华人（一个是上海来的，还有一个大概是本地华人）都挺不错的。认识了Daniel，从北京来的，才刚到墨尔本。在MCC里面人挤的要死，到处都是排队，去领了衣服，吃了点冰激凌（salted caramel味的，比想象中要咸一点orz），然后就溜了。跟Daniel逛了逛校园，然后没了……</p>
<p>​ 比想象中要无聊一些，不过大概也就是这样吧……</p>
<p>​ 下个星期就开学了，加油吧……</p>
]]></content>
      <categories>
        <category>生活馆</category>
      </categories>
      <tags>
        <tag>日记</tag>
        <tag>O-week</tag>
        <tag>流水账</tag>
      </tags>
  </entry>
  <entry>
    <title>Notes for FoC</title>
    <url>/posts/e912.html</url>
    <content><![CDATA[<p>Foundation of computing的一些笔记</p>
<p>有点多，慢慢更，应该还是挺详细了，整合到最后再做。</p>
<p>以及前三张worksheet内容不太多，暂时先放着，后面有空再补。</p>
<p><a href="http://www.pythontutor.com/visualize.html#mode=edit">pythontutor</a></p>
<span id="more"></span>
<h2 id="worksheet-3">Worksheet 3</h2>
<p><code>bool()</code> will convert the "default" value to <code>False</code>.</p>
<p>For example,</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="number">0.0</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="string">&quot;&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="literal">False</span>))</span><br></pre></td></tr></table></figure>
<p>will get the output of <code>false</code>.</p>
<p>Otherwise, <code>bool()</code> will provide us with a <code>true</code>.</p>
<p>字符串比较大小：从左比到右，比较字符ASCII码大小，即小写字母&gt;大写字母&gt;空格&gt;无字符。</p>
<p><code>ord()</code>可输出字符的ASCII码</p>
<p><strong>relational operators</strong> ：<code>&gt;=</code>, <code>&gt;</code>, <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code></p>
<p>注意<code>=</code>是赋值而<code>==</code>是等于号</p>
<p><code>in</code>可判断某字符串是否是另一个的子字符串（substring）</p>
<p><strong>logical operators</strong>：逻辑运算 <code>and</code>, <code>or</code>, <code>not</code>逻辑与或非略，前两者被称作binary operators，而后者称作unary operator</p>
<p>运算顺序是relational operators (including <code>in</code>) &gt; <code>not</code> &gt; <code>and</code> &gt; <code>or</code></p>
<p>python可接受连续relational operators</p>
<p><strong>if语句：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;condition&gt;:</span><br><span class="line">    &lt;block of statements&gt;</span><br></pre></td></tr></table></figure>
<p><strong>if-else语句：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;condition&gt;:</span><br><span class="line">    &lt;first block of statements&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;alternative block of statements&gt;</span><br></pre></td></tr></table></figure>
<p><strong>elif：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;condition1&gt;:</span><br><span class="line">    &lt;block <span class="number">1</span> of statements&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;condition2&gt;:</span><br><span class="line">    &lt;block <span class="number">2</span> of statements&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;condition3&gt;:</span><br><span class="line">    &lt;block <span class="number">3</span> of statements&gt;</span><br><span class="line"><span class="comment">#...</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;block n of statements&gt;</span><br></pre></td></tr></table></figure>
<p>注意有且仅有一个（最上方满足条件的）statement可被执行</p>
<p>检测prefixes或suffixes可以在字符串前后加上特殊字符再检测是否包含带有特殊字符的字符串</p>
<p>使用<code>something in 'something'</code>可以更方便判别某字符是不是某几个特定当中的一个</p>
<h2 id="worksheet-4">Worksheet 4</h2>
<p><strong>sequence</strong>包括strings（字符串），lists（列表），tuples（多元组）</p>
<p>index starts from 0 (for the first character) (zero offset)</p>
<p>读取字符串中第n个字符只需<code>string[n-1]</code></p>
<p>尝试读取字符串长度之外的字符时会报错，空字符串长度为0，也就是说空字符串即使读取index 0的字符也不行</p>
<p>可以使用<code>len(string)</code>来获取字符串长度</p>
<p>使用负数作为index可以从字符串后端开始检索</p>
<p>index number可使用<code>[a&lt;span class="github-emoji" alias="b" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f171.png?v8"&gt;&amp;#x1f171;&lt;/span&gt;c]</code>来输出一段字符，代表index从a到b（包含a但不包含b）步长c的数列，a留空代表index 0，b留空则是到字符串最后一位（包含），c留空则是default步长，为1</p>
<p><code>.lower()</code>可输出字母的小写</p>
<p><strong>列表（lists）</strong>：</p>
<p>用<code>[]</code>和<code>,</code>作为限定符</p>
<p>用于储存多个不同的对象（可以是不同数据类型），例如<code>my_jumble = [('jumbly', 4), 'wumbly', ('number', 5)]</code></p>
<p>空列表<code>empty = []</code></p>
<p>与字符串很多方面和字符串相同，例如超出列表范围indexerror报错，负数index从末端检索……下面就记一些区别</p>
<p>一个是用<code>:</code>来slice列表时，返回的数据一定是列表，而普通index返回的是index的对象（数字，字符串……），列表和对象不同。</p>
<p><code>list.append()</code>可以向列表内添加单个项目，而<code>list.extend()</code>可以添加多个项目</p>
<p><code>list.pop()</code>返回并删去列表最后一项</p>
<p><code>list.sort()</code>排序，</p>
<p><strong>tuples</strong>用括号作为限定符，特征是immutable（一旦创建就不可改变，<strong>但里面储存的列表可以被改变</strong>）</p>
<p>列表和tuple无法相加</p>
<p><code>+</code>（如果是同种类型）,<code>*</code>,<code>len()</code>,<code>in</code>同样可以应用于列表和tuples</p>
<p><code>max()</code>,<code>min()</code>可用于查找最大值最小值</p>
<p>同样有空tuple：<code>tuple=()</code></p>
<p><strong>nested list</strong>: 多个sequence互相嵌套</p>
<p><a href="https://docs.python.org/3/library/stdtypes.html">这里是更多sequence的操作和性质</a></p>
<h2 id="worksheet-5">worksheet 5</h2>
<p><strong>functions 函数</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">name_of_function</span>(<span class="params">var1, var2...</span>):</span></span><br><span class="line">    <span class="comment">#body</span></span><br><span class="line">    <span class="keyword">return</span> value <span class="comment">#return也相当于退出函数，不会进行后面的语句</span></span><br></pre></td></tr></table></figure>
<p><code>var1</code> <code>var2</code>被叫做parameters（形参），而当调用（call）函数时输入的具体变量被称为argument（实参）</p>
<p>可以在调用函数时使用<code>var1=a,var2=b</code>为特定形参赋值，此时两句话被视作函数中的赋值语句，顺序可调换</p>
<p><code>len()</code>,<code>print()</code>,<code>input()</code>等都是函数，特点是函数后一定带有括号</p>
<p>如果函数没有设定return，其return值将是<code>'None'</code></p>
<p>注意给变量赋值时赋的是返回值，例如以下代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure>
<p>会输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a</span><br><span class="line">None</span><br></pre></td></tr></table></figure>
<p>第一个<code>a</code>是在执行<code>a=print('a')</code>时输出的，这个语句同时给a赋予了<code>print('a')</code>的返回值，也就是None，于是在下一行输出的就是a的值<code>None</code></p>
<p>定义函数时函数名要求：以字母或下划线（_）作为第一个字符，剩下可以由字母，数字和下划线任意组合，但是不能与保留字（reserved word）重合</p>
<p>注意缩进</p>
<p>函数定义要出现在函数调用之前</p>
<p><code>return</code>后不一定要跟返回值，可以单挂（用来quit），也可以省略（没有quit效果，适合不用返回值的函数），返回值默认为<code>None</code></p>
<p>在定义函数形参过程中可以为参数设定默认值（optional argument），调用时可以省略该默认值，也可以在调用时修改</p>
<p><code>print()</code>函数包含几个optional argument：<code>sep</code>和<code>end</code>，前者代表多个输出间的间隔，默认为空格（<code>' '</code>），而后者代表输出结尾，默认换行符（<code>'\n'</code>）</p>
<p><strong>method</strong>（<code>.upper()</code> for example）</p>
<p><code>dir()</code>可以查看与对象相关联的methods</p>
<p><code>help()</code>可以查看各method的用法</p>
<p><code>string.split()</code>可以把字符串按照<code>sep</code>（默认为空白字符，包括空格符，制表符，换行符）分成列表，分出来空字符串会被删除</p>
<h2 id="worksheet-6">Worksheet 6</h2>
<p><strong>String formating</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The quotient of &quot;</span> + <span class="built_in">str</span>(num1) + <span class="string">&quot; and &quot;</span> + <span class="built_in">str</span>(num2) + <span class="string">&quot; is &quot;</span> + <span class="built_in">str</span>(num1/num2))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The quotient of&quot;</span>, num1, <span class="string">&quot;and&quot;</span>, num2, <span class="string">&quot;is&quot;</span>, num1/num2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;The quotient of <span class="subst">&#123;num1&#125;</span> and <span class="subst">&#123;num2&#125;</span> is <span class="subst">&#123;num1/num2&#125;</span>&quot;</span>)    <span class="comment">#f-string格式，使用&#123;num1/num2:.2f&#125;可以保留两位小数</span></span><br></pre></td></tr></table></figure>
<p>三种格式会输出相同的结果</p>
<p><strong>f-string</strong> 格式是<strong><code>print(f"something")</code></strong>，引号内可以用<code>&#123;val&#125;</code>来输出某个值（变量等）</p>
<p>单引号（<code>''</code>）和双引号（<code>""</code>）可以随意互相替换，但要注意字符串内的标点，避免字符串“断掉”，如果句内包括了引号，有三种解决方案，一是利用另一种引号作为限定符，二是在句中引号前使用<code>\</code>会得到正常的引号输出，三是使用三重引号</p>
<p><strong>三重引号</strong>提供了多行输出的功能，区别于普通引号换行会出现编译错误，三重引号中的换行会在输出中显示出来，并得到正常输出。（单双引号也可以随意替换，任意组合）</p>
<p>在f-string中，使用<strong><code>&#123;float:n.mf&#125;</code></strong>（其中n和m为指定常量）右端在第n个字符位置对齐（如果数字长度小于这个数字的话，数字长度大的会一直往右把数输出完，<em>或者说会在数字左边加上<code>max&#123;0,n-len(val:.fm)&#125;</code>个空格</em>）同时保留m位小数，如果在n前面加上0，则用0来取代前面所提的空格。</p>
<p>同样的，对于字符串，我们可以用s来代替f，也就是<strong><code>&#123;string:n.ms&#125;</code></strong>，区别是字符串默认左端对齐，而浮点数默认右端对齐，同时字符串没有把空格改成0的操作（<em>如果要用某字符替代空格，可以在n前加上字符+对齐符号，类似<code>:a&lt;n</code>，此时空格可被替代，浮点数也可以用同样的方式输出（替位符不一定要是数字/字母）</em>）</p>
<p><em>对于s，目前测试下来是可省略的，而f若省略功能则变成保留有效数字，若将点号后面省略则是单独的格式修改（不会改变初始值），冒号后整体被称作format specifier，点号后的数字叫做Precision，最后的字母叫做format code</em></p>
<p>在n前输入<code>&lt;</code>或<code>^</code>或<code>&gt;</code>可以分别对输出进行居左，居中，居右对齐的设置</p>
<p><code>:g</code>表示general format，会根据数字自动调整数据类型，例如<code>2/2:g</code>会输出1，<code>:d</code>输出为普通十进制整型，<code>:c</code>会输出字符，可以输出一个整数在Unicode中对应的符号。</p>
<p>在前面提到的n和m处如果要使用变量，需要在表达式外额外再添加一层大括号。</p>
<p>我自己的总结大概是对于<code>&#123;something:a&lt;n.ms&#125;</code>其中最后一个字母设置format code，主要用来辨识数据类型（例如c,d,f,g,s），<code>.m</code>针对该数据类型进行截取（f：保留小数点后位数，s：保留字符串字符数，省略则根据原始数据类型，但对于float是保留有效数字），<code>n</code>代表对齐格式的右端位置，<code>&lt;</code>,<code>^</code>,<code>&gt;</code>三种对齐格式，<code>a</code>位置则是空格替换（在float类型下可以直接带0，其他情况一定要在没有进行precision，同时有对齐格式的基础上添加，但是可以替换任意字符（至少包括字母数字和$））</p>
<p>还有一堆乱七八糟的但是全写下来太复杂了就摸了，而且这些也只是我尝试出来的结果，不一定完全正确。</p>
<p><a href="https://www.w3schools.com/python/ref_string_format.asp">有关format更多的功能可以看这里</a></p>
<p><a href="https://www.python.org/dev/peps/pep-0498/">关于f-string看这里</a></p>
<h2 id="worksheet-7">Worksheet 7</h2>
<p>这一节主要是复习</p>
<p><strong>Object(对象)</strong>：It's basically an instance of some data in our code. It's the unit which Python uses to handle all the information we give it.</p>
<p><code>type(object)</code>输出括号内内容的数据类型（包括types或者buildin functions）,例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="built_in">str</span>))  <span class="comment"># &lt;class &#x27;type&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="built_in">print</span>))  <span class="comment"># &lt;class &#x27;builtin_function_or_method&#x27;&gt;</span></span><br></pre></td></tr></table></figure>
<p>但如果在print后面加上括号，返回的就是return对象，也就是<code>NoneType</code></p>
<p><code>id(object)</code>输出对象在内存中的位置，关系运算符<code>is</code>判断两个object是否有相同的id，类似<code>a=b</code>的statement会给两个变量赋予同一个id，如果储存的是数字，单独赋值也会给它同样的id，但如果是列表，单独创建会创建不同的id</p>
<p><code>del object</code>将对象从内存中删除</p>
<p>Boolean也可以进行算术运算，此时False被看作0，True被看作1</p>
<p><strong>表达式：</strong></p>
<p><strong>Expression</strong>: some code which generates an object. This could be a literal or a previously-assigned identifier. It could be an operation, or a function/method call. It could be an index or slice of a sequence. A function call can be thought of as an expression which evaluates to its return value.</p>
<p><strong>Simple Expression</strong>: An expression containing only an operator and its operand(s) as literals or variables.</p>
<p><strong>Complex Expression</strong>: An expression with more parts than a simple expression. This could be expression with an operator where the operands are expressions themselves, such as the operands of <code>/</code> in <code>(2 + 4) / (4 - 3)</code></p>
<p><strong>Logical Expression</strong>: An expression which evaluates to a <code>bool</code>. Usually contains some combination of logical and relational operators.</p>
<p><strong>Statement</strong>: Anything which is a valid line of Python code. This includes all expressions, but also lines with <code>def</code>, <code>return</code>, <code>if</code>, <code>elif</code>, <code>else</code>. It also includes assignment operations (<code>=</code>).</p>
<p>都是些定义</p>
<h2 id="worksheet-8">Worksheet 8</h2>
<p><strong>循环（iteration）</strong></p>
<ol type="1">
<li><p><strong>while</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> &lt;condition&gt;:</span><br><span class="line">    &lt;block of statements&gt;</span><br></pre></td></tr></table></figure>
<p>当condition为True时循环运行statement</p>
<p>注意避免死循环</p>
<p>运算符号+等于号相当于运算并赋值，例如<code>+=</code>,<code>-=</code>,<code>*=</code>,<code>/=</code>,<code>//=</code>,<code>%=</code>,<code>**=</code></p>
<p><code>break</code>也可以用于退出循环</p></li>
<li><p><strong>For</strong></p>
<p>用于可循环对象（<strong>iterable</strong> object），例如字符串，列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> &lt;loop variable&gt; <span class="keyword">in</span> &lt;iterable&gt;:</span><br><span class="line">    &lt;block of statements&gt;</span><br></pre></td></tr></table></figure>
<p><strong>iterable</strong>可以是字符串，列表等，也可以是<code>range(a,b,s)</code>，a表示初值，b表示末值，s表示步长（类比切片时的<code>a&lt;span class="github-emoji" alias="b" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f171.png?v8"&gt;&amp;#x1f171;&lt;/span&gt;s</code>），当括号里只有一个值时表示<code>0:n</code>，起到写几就循环几次的作用。</p></li>
</ol>
<p>然后后面就是一些for loop 和while loop的转换，应该没啥好说的……</p>
<p>for转while注意要初始化变量，while也可以用<code>while list:</code>然后每个循环把列表里内容删一项</p>
<p>变量名用大写代表常量</p>
<p><code>list.append()</code>可以向列表内添加项目</p>
<h2 id="worksheet-9">Worksheet 9</h2>
<p><strong>Mutability</strong></p>
<p>Lists, dictionaries and sets are <strong>mutable</strong>.</p>
<p>Everything else is <strong>immutable</strong> — strings, tuples and numbers (including ints, floats and booleans).</p>
<p>意思是对lists，dictionaries，sets进行某些操作，他们的id不变，也就是还是同一个对象</p>
<p>而对于剩下的，你要改变他们的值，只能重新赋值，此时id也就会变</p>
<p>list.pop() 括号里index，内容</p>
<p>list.remove() 括号里index</p>
<p>list.extand() 可以进行列表+列表操作</p>
<p>list.clear() 清空</p>
<p>list.sort() 对原list进行排序</p>
<p>sorted() 是一个函数，返回值为排序后的列表，原列表不变</p>
<p>.copy()创建列表的复制</p>
<p>.count()返回某元素出现的次数</p>
<p>.index(something,(n))括号内‘内容，出现次数’，就是返回第n个something的index</p>
<p>.reverse()把list倒过来排序</p>
<p>FIFO：from collections import deque</p>
<p>.popleft()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list_a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list_a:</span><br><span class="line">	<span class="keyword">if</span> i <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>]:</span><br><span class="line">		list_a.remove(i)</span><br><span class="line"><span class="built_in">print</span>(list_a)</span><br></pre></td></tr></table></figure>
<p>dict.pop()括号里要包含key</p>
<p>dict.popitem()会自动找到最后一项</p>
<p>.items返回一个列表，包含dictionary所包含的tuples</p>
<p>del dict[key]删除某一项目</p>
<p>集合</p>
<p>set(iterable) 只包含唯一值，位置随机（unreliable order）</p>
<p>set|set (.union())</p>
<p>set&amp;set (.intersection())</p>
<p>set-set (.difference())</p>
<p>import &lt;&gt;</p>
<p>from &lt;&gt; import &lt;&gt;</p>
<p>import &lt;&gt; as &lt;&gt;</p>
<p>counter().most_common()</p>
]]></content>
      <categories>
        <category>自习室</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Notes for MATLAB</title>
    <url>/posts/ea72.html</url>
    <content><![CDATA[<p>看上去MATLAB也要记些东西……</p>
<p><em>斜体</em>表示出现的内容是课程提供的function</p>
<span id="more"></span>
<h2 id="矩阵">矩阵</h2>
<h4 id="lab2">lab2</h4>
<p>最基础的<code>A=[a b;c d]</code></p>
<p>空格也可以用<code>,</code>，暂时没找出区别</p>
<p><code>A'</code>用于求转置（transpose）</p>
<p><code>.*</code>把矩阵内元素对应相乘，或者说<strong>行矩阵<code>.*</code>列矩阵</strong>可以构造一个类似乘法表的东西</p>
<p><code>A+constant</code> 可以在A的每一个元素的基础上加上一个常数</p>
<p><code>A(m,n)=a</code>可以把矩阵第m行n列的数改成a</p>
<p>单独<code>:</code>可以代替全列，例如<code>v=B(:,2)</code>会将v定义为B第二列的列向量</p>
<p>此外，<code>:</code>可以指代数列，句式为<code>a:s:b</code>，其中a为初项，s为步长，b为末项（更准确的说是最后一项不超过b），s可被省略，默认是1</p>
<p><code>eye(n)</code>用以构造n阶单位矩阵（Identity matrix）</p>
<p><code>diag(v)</code>用以构造以v为对角线的对角形矩阵</p>
<p><code>ones(n,m)</code>构造n行m列的元素全是1的矩阵</p>
<p><code>zeros(n,m)</code>构造n行m列元素全是0的矩阵</p>
<p>分块矩阵亦可用<code>M=[A B;C D]</code>的形式来获得</p>
<p>习题：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A=[<span class="number">4</span> <span class="number">8</span> <span class="number">8</span> <span class="number">11</span> <span class="number">1</span>]</span><br><span class="line">B=[<span class="built_in">diag</span>(A) <span class="number">7</span>*<span class="built_in">ones</span>(<span class="number">5</span>,<span class="number">7</span>);<span class="number">12</span>*<span class="built_in">ones</span>(<span class="number">7</span>,<span class="number">5</span>) <span class="number">7</span><span class="number">-6</span>*<span class="built_in">eye</span>(<span class="number">7</span>)]</span><br><span class="line">B(<span class="number">1</span>,<span class="number">4</span>)=<span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>优化(64)：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A=<span class="built_in">ones</span>(<span class="number">5</span>,<span class="number">7</span>)</span><br><span class="line">Q=[<span class="built_in">diag</span>([<span class="number">4</span> <span class="number">8</span> <span class="number">8</span> <span class="number">11</span> <span class="number">1</span>]) <span class="number">7</span>*A;<span class="number">12</span>*A&#x27; <span class="number">7</span><span class="number">-6</span>*<span class="built_in">eye</span>(<span class="number">7</span>)]</span><br><span class="line">Q(<span class="number">1</span>,<span class="number">4</span>)=<span class="number">6</span></span><br></pre></td></tr></table></figure>
<h4 id="lab3">lab3</h4>
<p><code>R=rref(A)</code>直接求A的reduced row echelon form</p>
<p>我这里matlab默认是输出为小数形式，使用<code>format (style)</code>来修改输出格式，format处可以填<code>short</code>（默认，小数点后四位）, <code>long</code>（小数点后15位）, <code>shortE/longE</code>（科学计数法）, <code>shortG/longG</code>（科学计数法/普通小数，取决于哪种更紧凑）, <code>shortEng/longEng</code>（Engineering notation: 类似科学计数法，但是指数必定为三的倍数）, <code>+</code>（只显示+/-，0则不显示）, <code>bank</code>（货币格式，小数点后二位）, <code>hex</code>（十六进制表达？）, <code>rational</code>（分数，可以缩写rat，但是输出的分数并不是精确值，而是估计）等，以及显示格式<code>compact</code>和<code>loose</code>（默认），<code>fmt=format</code>查看当前设置，<code>format default</code>返回初始设置。</p>
<p><code>rat(a)</code>可以输出分数形式（估计值），算法是利用</p>
<p><span class="math display">\[\frac{N}{D}=D_1+\frac{1}{D_2+\frac{1}{...+\frac{1}{D_k}}}\]</span></p>
<p><a href="https://au.mathworks.com/help/matlab/ref/format.html">reference</a></p>
<p>上面似乎有点长（主要不是worksheet上的，自己查来的</p>
<p><code>det()</code>和<code>inv()</code>分别求矩阵的逆和行列式</p>
<p>然后做exercise 2的时候发现点问题，下面这个矩阵行列式为零，不可逆，但是拿det和inv计算出来行列式是-1/1050839913053116<span class="github-emoji" data-alias="laughing" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span></p>
<p><span class="math display">\[\begin{bmatrix} 1&amp;2&amp;3\\ 4&amp;5&amp;6\\ 7&amp;8&amp;9\\ \end{bmatrix}\]</span></p>
<p>而且他求不可逆矩阵出来结果是</p>
<p><span class="math display">\[\begin{bmatrix} 1/0&amp;1/0&amp;1/0\\ 1/0&amp;1/0&amp;1/0\\ 1/0&amp;1/0&amp;1/0\\ \end{bmatrix}\]</span></p>
<p>提示是：</p>
<blockquote>
<p>警告: 矩阵为奇异工作精度。</p>
</blockquote>
<p>format设置为<code>rational</code>时，答案可能给出<code>*</code>代表非常小的数字，可能是一些奇怪的误差，类似上面矩阵给出的结果</p>
<p><em>然后是几个写好的函数：<code>[B,E] = rowswap(A,i,j)</code>，<code>[B,E] = rowmul(A,c,i)</code>，<code>[B,E] = rowadd(A,c,i,j)</code>其中B是完成行变换的输出矩阵，E是行变换对应的基本矩阵，A是输入矩阵，c是倍数，i，j是操作的行数（把i行加到j行上）</em></p>
<p><code>size(A)</code>用来查询矩阵A的大小，输出结果记作<code>[dim1, dim2, ...]</code>，可以用<code>size(A,n)</code>用来输出矩阵A第n维度的大小（例如1是行，2是列）</p>
<p>然后所以习题里面的<code>size(A,1)</code>要改成<code>size(A,2)</code>之前都没发现orz</p>
<h4 id="lab4">lab4</h4>
<p><code>det()</code>求行列式（上节课就有了）</p>
<p><code>dot()</code>求dot product</p>
<p><code>cross()</code>求cross product</p>
<p><em><code>pgram1(B)</code>绘制由两行向量组成的平行四边形（应该只能做二维的，输入一定要是2*2的矩阵）</em></p>
<p><em><code>pgram2(B,C)</code>绘制两个平行四边形</em></p>
<p><code>Hold on</code>，<code>Hold off</code>可以切换是否在一个figure窗口中绘制多个图</p>
<p><code>Figure(n)</code>可以新建第n个Figure窗口</p>
<p>Home- Clear workspace 可以清除所有变量</p>
<p><code>syms</code>需要安装Symbolic Maths Toolbox</p>
<p><code>syms</code>是类似声明变量（符号）的一个指令，内容……非常多，挑了一部分记 <a href="https://au.mathworks.com/help/symbolic/syms.html?searchHighlight=syms&amp;s_tid=srchtitle_syms_1">这里是官方网站的链接</a></p>
<p><code>syms</code>可以用来声明普通符号，矩阵（用方括号声明大小，例如<code>syms a [1 4]</code>），函数（带小括号及自变量）</p>
<p>声明符号的最后可以指定这个符号的取值范围，例如<code>real</code>,<code>integer</code>,<code>positive</code>,<code>rational</code>,<code>matrix</code>等</p>
<p><code>assumptions</code>可以用来查询目前已声明的变量及他们的取值</p>
<p><code>assume([x y z],'clear')</code>可以用来清除已声明的变量</p>
<p><code>abs()</code>计算绝对值</p>
<p><code>sqrt()</code>计算平方根</p>
<p><code>simplify()</code>化简带符号的表达式</p>
<p>MATLAB似乎没有专门指令求向量长度，所以要用<code>sqrt(dot(x,x))</code>来求向量x的长度</p>
<p>然后如果没有上节课提供的函数，自己做row operation可以直接类似这样：<code>A(row1,:)=A(row1,:)+k*A(row2,:)</code></p>
<h4 id="lab5">lab5</h4>
<p><strong>Closed Input-Output (Leontief) Model</strong></p>
<p>构建矩阵E，行和列分别表示不同的产品，列表示原材料，行表示作为产品，<span class="math inline">\(e_{i,j}\)</span>表示生产i产品需求j材料的比例</p>
<p>由于需求不可能是负值，所以矩阵中所有元素都大于等于0，即<span class="math inline">\(e_{i,j}\ge 0\)</span> for <span class="math inline">\(1\le i, j\le k\)</span></p>
<p>由于研究的是closed model，无商品进出口，每年使用的总比例一定为1，即每列的和为1，也即<span class="math inline">\(\sum_{i=1}^{k}e_{i,j}=1\)</span> for <span class="math inline">\(1\le j\le k\)</span></p>
<p><code>sum()</code>求和，输入向量（数组？）求所有元素的和，输入矩阵则求每一列的和，输出为行向量，基于此<code>sum(sum(A))</code>用以求A矩阵中所有元素之和</p>
<p><code>max()</code>求最大值，输入为向量时输出最大值，输入为矩阵则输出每列的最大值的行向量，<code>max(max(A))</code>求矩阵A中的最大元素</p>
<p><code>min()</code>求最小值，同理略</p>
<p><code>isequal(A,B)</code>判断A，B（可以是数字，矩阵，表达式）是否相等，True则输出1，False输出0。</p>
<p>注意Matlab有精度误差，例如<code>isequal(1,0.99999999999999999)</code>会返回1</p>
<p><code>==</code>也可以用于比较大小，但是如果等号两边是矩阵，它会返回一个矩阵，分别比较每个元素的大小</p>
<p><code>~=</code>不等于，<code>and (&amp;)</code> 与，<code>or (|)</code>或</p>
<p><code>%</code>后面跟注释</p>
<p><strong>if condition</strong>:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;condition&gt;</span><br><span class="line">	&lt;statement&gt;</span><br><span class="line"><span class="keyword">elseif</span> &lt;condition&gt;</span><br><span class="line">	&lt;statement&gt;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	&lt;statement&gt;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p><strong>函数声明</strong></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> &lt;<span class="title">output</span><span class="params">(输出，若要多个输出则用[]包括所有输出项)</span>&gt; = &lt;<span class="title">function_name</span>&gt;<span class="params">(&lt;input(同理)</span>&gt;)</span></span><br><span class="line">	&lt;statement(不同表达式之间用分号区分)&gt; </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>Exercise 3：</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">B</span>=<span class="title">mysolve</span><span class="params">(E)</span></span></span><br><span class="line">[m,n]=<span class="built_in">size</span>(E);</span><br><span class="line"><span class="keyword">if</span> m~=n</span><br><span class="line">    <span class="string">&#x27;E is not square.&#x27;</span></span><br><span class="line"><span class="keyword">elseif</span> <span class="built_in">min</span>(<span class="built_in">min</span>(E))&lt;<span class="number">0</span></span><br><span class="line">    <span class="string">&#x27;Not all the entries are greater or equal to 0&#x27;</span></span><br><span class="line"><span class="keyword">elseif</span> <span class="built_in">min</span>(sum(E))==<span class="number">1</span> &amp; <span class="built_in">max</span>(sum(E))==<span class="number">1</span></span><br><span class="line">    B = rref(E-<span class="built_in">eye</span>(n))</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="string">&#x27;The sum of each column is not 1&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>Exploration一开始被a迷惑了，然后发现<span class="math inline">\(E_3^2\)</span>就不满足条件（大于0，但<span class="math inline">\(E_3^2\)</span>有0元素）</p>
<p>b的话按照题目是叫我们找规律，大概上下两元素间的比值是<span class="math inline">\(\frac{(n-1)^2}{n}\)</span></p>
<h4 id="lab-6">lab 6</h4>
<p>前面一半是用matlab验证一些简单的结论，没啥东西</p>
<h2 id="matlab-for-physics">MATLAB for physics</h2>
<p>用小括号来截取数组中的一部分，index从1开始，最后一个可以用<code>end</code>，使用<code>end-n</code>来指代倒数第n+1个数字</p>
<p>科学计数法用e来表示，例如<code>3e8</code>。</p>
<p><code>log()</code>表示自然对数</p>
<p><code>log10()</code>表示以10为底的对数</p>
<p>在矩阵中有运算<code>.^</code>区别于单独<code>^</code>（矩阵和自己相乘）可将矩阵里的每个元素单独乘方</p>
<p>可在函数中用数表（矩阵）作为自变量，输出结果为同形矩阵</p>
<p>此时用<code>plot(x,y)</code>可以直接作图</p>
<p>同时<code>plot(x,y,'.')</code>表示将每组数据呈现为点，同样地，可以将<code>'.'</code>改为<code>‘o’</code> (circles), <code>‘x’</code> (crosses), <code>‘+’</code> (plus signs), <code>‘*’</code> (asterisks), <code>‘s’</code> (squares)来进行绘图</p>
<p>使用<code>errorbar(x, y, ybars, ’.’)</code> 可以在图上加上误差线，其中<code>x</code>,<code>y</code>,<code>ybars</code>为同维数组</p>
<p>如果希望在同一幅图上绘制多种对应关系，可以使用<code>figure</code>（添加空白绘图窗口）和<code>hold on</code>指令，而若要取消<code>hold on</code>指令，只需键入<code>hold off</code>（<code>hold on</code>,<code>hold off</code>是状态切换指令，也就是说一旦<code>hold on</code>, 就会一直在同一幅图上添加内容，直到<code>hold off</code>）</p>
<p>也可以使用<code>plot (x1, y1, x2, y2, ’.’)</code>的句式，其中代表数据点样式的符号跟在相应因变量后面，如上面的例子中，<code>x1</code>,<code>y1</code>应用了default样式：连线，<code>x2</code>,<code>y2</code>应用点号作为每个数据点的样式</p>
<p>而curve fitting功能可以在APP-Curve Fitting来实现（需要下载）</p>
]]></content>
      <categories>
        <category>自习室</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>开学后的一些日记</title>
    <url>/posts/5eb1.html</url>
    <content><![CDATA[<p>一些短篇故事的连载，不定期更新，前提是有空+有故事。</p>
<span id="more"></span>
<p>3月2日</p>
<p>​ 今天South Lawn有社团招新活动。人很多也很热，最后也就在CSSA驻足，短暂的听了听他们介绍打算加入一下看看，然后扫它们微信小程序注册，先是显示密码太简单，试了好几次，哦，原来隐藏要求要大小写字母，特殊符号，数字都要有，然后再提交，显示不是有效邮箱，工作人员说排队等前面信息部的来帮忙操作一下，哦。于是乎排了好久的队，排到了说你不如到官网上去注册，然后叫我扫码把会费交了……不是我连注册都没成，你就叫我交会费吗，然后我就走了……本来加这种也没啥意义吧，5刀买点礼品，就当没来过算了。</p>
<p>3月4日</p>
<p>​ 今天发生的事挺多的，早上出门有点晚，结果在Melbourne Central被Luna看到了，不过我没注意到。然后Foc结束跟Uri逛Peter Hall（他们Calc2 lecture变到Peter Hall了），结果又迎面碰到Hannah。后来我跟Uri走到MUMS club room, Quang很热情得接待了我们，然后还看到房间里有一本中文封面，英文版的《数学分析原理》，Quang说这在他们这里已经成Meme了，谁也不知道这本书是哪来的。</p>
<p>​ 以及最后图书馆5点就关门了，原本打算去Victoria Market把Compulsory的discussion顺便做了，结果……坐错电车了（去VM要从Campus西边上电车，结果我习惯性去东面的电车站），直接回家orz，这compulsory就乱摸了吧……</p>
<p>3月7日</p>
<p>​ 今天去学校结果触摸鼠标失灵了，下午才好，然后发现左右键反了……最后回到家才给它搞正常。</p>
<p>​ 然后下午有AM1的Practical 1，挺愉快的，有一个组员挺强，然后我们成功地提前把worksheet做完了，就是说剩下一个人看上去没太跟得上（（（</p>
<p>​ 还有，今天莫名其妙物理发通知说上周二lecture有人positive，要求我们自测，讲道理挺紧张的，不过最后测出来negative挺好。</p>
<p>3月8日</p>
<p>​ 早上物理实验课，组里有个大佬，excel用到飞起。然后还有一个组员韩国人，长得贼像济南屁王，笑死……最后实验结果很准确，就是说中间绕了弯路，然后下课留在实验室好久才把log book写完。</p>
<p>​ 然后就是今天的午饭……实验课结束后就只剩十几分钟，买完披萨就往包里一放直接去上课了，一直到两点钟下课才吃……饿死了。</p>
<p>​ 然后是peer mentor时间，随便摸了一会儿，讲了一些链接和学习经验，然后就放我们走了，然后到图书馆呆了一会儿结果发现peer mentor就坐在对面桌orz。做了物理的assignment，第一题就卡了，结果最后发现少乘一个π，最后有惊无险还是过了。中间有一题小学奥数，笑死，一只鸟在两辆火车中间飞来飞去，简直了……</p>
<p>​ 下午回家，Melbourne Central还有游行，把电车路给堵了，无语……</p>
<p>3月9日</p>
<p>​ 今天没啥课，就是中午有节AM1，Uri嫌Foc无聊也来上AM1。然后结束后路过Wilson Hall，排队排成一个圈了orz，说是有袋子好领，我也不太理解有啥值得排这么长队领的……</p>
<p>​ 然后今天在图书馆，跟开party似的，到处都是人在聊天，有点绷不住。</p>
<p>​ 然后晚上跟我妈去Victoria Market，夜市人是真的多，然后去把monument的照片给拍了，也还好……</p>
<p>3月10日</p>
<p>​ 早上物理课，有几个实验还挺好玩，其中一个让火车在非固定的圆形轨道上行进，然后控制系统说是1957年制造的，笑死。</p>
<p>​ 然后上了Foc的workshop，大概是无聊透了，一节课就是在填一张bingo表，大概就是找到班上具有对应属性的人，然后填上名字……我是一开始就放弃了，到后面这活动就演变成了一个个人问“Are you…………”，是真的无语了。</p>
<p>​ 下午物理PSC，有点无聊，tutor只讲了两道题目，然后就没了，讲了好多解题的方法，讲道理感觉这课上的压力有点大。然后课后坐我边上那个人说我看着眼熟，我说我也一样，回去研究了一下大概是星期二实验课见到的吧。</p>
<p>​ 其它倒也没啥。</p>
<p>3月11日</p>
<p>​ 下午最后一节AM1的Computer Lab，结果机房里电脑卡的要死，只能用自己的……然后我星期一把worksheet都做完了……于是只能在课上写assignment。</p>
<p>​ Computer lab前去了MUMS room，Quang在白板上写了一道题目，让我们做orz。正好给它打了出来：</p>
<pre><code>    there’s infinite lines labeled from 1 to n.
    (1) none of them are parallel
    (2) no three lines intersect at the same place
    (3) none of them are vertical.

    We define f(k):
    You start from x=-∞ on line k, and changing lines (to the right hand side) every time you arrive at an intersection, by the time you reach x=∞, define the value of f(k) as the label of the line you end up on.

    Show that f(f(k))=k.</code></pre>
<p>​ 放学之后回到那里，原本打算把assignment做完，然后稍微再想想白板上的题目，结果跟一个都Master of Physics的学长下了两盘象棋，挺好玩，但是结束已经七点了……</p>
<p>3月14日</p>
<p>​ 很难绷得住，今天原本是公共假期，但大学还要上课，结果就是早上跑到火车站发现时间表都不一样了……匆匆忙忙幻视一辆火车终点站是Flinders Street然后坐上去，结果到了Nunawading才意识到坐错火车了。于是下车，它那显示的时间还是错的，一边急的要死，一边已经躺平了，最后到学校已经40分了，过去他们也没在干什么，就是后来有个辩论，有点尬住。然后有个同学吐槽hurdle requirement的quiz，三次机会要求80%，然后fail了，笑死。</p>
<p>​ 吃午饭的时候碰到Uri然后一块去上了AM1，结果讲的都是高中的向量内容，他表示很不理解。然后后面是tutorial，课前lms上没发题目，然后就上课直接做，就最后一题有点挑战，构造矩阵和列变换之后稍微卡了一下，结果半个多小时就把题目做完了，然后跟一个小组的两个同学分享上个星期在MUMS room看到的那道题，然后后来别的组陆续做完也都围了过来。</p>
<p>​ 哦突然发现，今天是博客第一百天，yeah！</p>
<p>3月15日</p>
<p>​ t老师生日快乐<span class="github-emoji" data-alias="birthday" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f382.png?v8">🎂</span></p>
<p>​ 然后早上物理实验单摆，到后面队友就疯狂编数据赶进度。然后第一部分找周期和初始角度的关系，然后我们一开始做的都是小角度，老师过来叫我们大角度也要做，于是就做得很狼狈。第二部分利用周期求g，结果求出来14.9，后来发现别的组也都一样，算是系统误差……</p>
<p>​ 然后下午发现AM的tutorial sheet和computer lab sheet上传到了lms上，然后就做了matlab的活，感觉有点多。</p>
<p>3月16日</p>
<p>​ 早上睡了懒觉，下午把物理assignment给做了，结果58.2/60，成功损失了0.045的总分（，就是说中间有一道题，76.9kg，结果我算的时候用的是76，结果就错了，第二遍发现受力分析有问题，然后又错了，最后一遍结果又用成76了<span class="github-emoji" data-alias="sweat" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f613.png?v8">😓</span>。然后后面有一题算空气阻力的，计算贼烦，把wolfram敲死了（可能是网速问题？），还是geogebra好用。</p>
<p>​ 然后做了foc一个worksheet，挺无聊的……</p>
<p>3月17日</p>
<p>​ 早上foc的workshop，一如既往的无聊，worksheet甚至只是老师在屏幕上投影出来，然后做了个Kahoot，然后就没了……</p>
<p>​ AM1说是明天第一部分（矩阵&amp;向量）就结束了，比想象中快一些？</p>
<p>​ 物理表示参考系这东西我有点搞不懂，不过感觉别的人似乎比我更懵orz ，下课后听Luyee跟老师探讨简谐运动公式的推导，然后又和他多聊了一会儿，至少这一节PSC还算不错，然后后来一直到六点才离开，然后在图书馆待到七点差不多是啥都没干。</p>
<p>​ 哦，今天最搞笑的还是要数郑干在b站上发了一个<a href="https://www.bilibili.com/video/BV1jS4y1u7ZR?share_source=copy_web">“求偶视频”</a>，结果就火了笑死<span class="github-emoji" data-alias="laughing" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span> ……</p>
<p>3月18日</p>
<p>​ 物理课讲了momentum，然后演示实验教授坐到一个小车里然后通过往前扔东西/吹风试图向后退，结果小车纹丝不动笑死。然后去上了foc的lecture，结果听lecturer又从“what is programing”开始讲了一遍，人傻掉了……</p>
<p>​ 数学上完在MUMS room和Uri下了局chess，到computer lab才发现自己和Dougal 数学和物理的选课居然是完全重合的orz。</p>
<p>​ 后来去参加了MUMS的Games Night，还是很好玩的，和几个同学一起玩Monopoly，结果我指哪去哪，一下子就破产了……然后就看别人玩，后面有桌打牌的，打了一半问我们要了一叠代币去，哦还有一个人，脸上一直挤眉弄眼的，贼滑稽。最后到八点半才回家<span class="github-emoji" data-alias="man_facepalming" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png?v8">🤦️‍♂</span>。</p>
<p>3月21日</p>
<p>​ 早上睡过头了，旷了一节science的workshop……</p>
<p>​ 然后下午数学practical也是半个多小时把题目给干完了，然后Dougal给我们讲模逆元，讲得我们都是半懂不懂的，然后我们两个一块到图书馆下面自习了会儿，他在那里继续捣鼓模逆元（<a href="https://en.wikipedia.org/wiki/Modular_multiplicative_inverse">Modular multiplicative inverse</a>，可以用来给分数求模），他说想要证当a,n互质时，a的模逆元存在。查了几下大概是看懂了，然后他给我介绍了<a href="https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm">扩展欧几里得算法</a>，然后又聊到特征值法求数列通项公式，他提到用矩阵来求通项公式，突然就理解了为什么当时要叫做“特征值法”了。然后又research了一下，似乎二阶常系数齐次线性微分方程也类似？</p>
<p>​ 然后又想了一下数学tutorial的第三题，当时<span class="math inline">\((\vec{u}·\vec{v})·\vec{w}\neq(\vec{w}·\vec{v})·\vec{u}\)</span>只考虑了<span class="math inline">\(\vec{w}\)</span>和<span class="math inline">\(\vec{u}\)</span>共线没有考虑系数为0的情况，所以原题等号成立的条件应该为①<span class="math inline">\(\vec{w}\)</span>和<span class="math inline">\(\vec{u}\)</span>共线或者②<span class="math inline">\(\vec{v}\)</span>同时和<span class="math inline">\(\vec{u}\)</span>以及<span class="math inline">\(\vec{w}\)</span>垂直。</p>
<p>​ 晚上听说下个星期Box Hill到Camberwell要bus replace train，有点绷不住。</p>
<p>3月22日</p>
<p>​ 今天好冷的说，还有点下雨<span class="github-emoji" data-alias="sob" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span>早上在Box Hill Central买了四个饼，量巨多，四个饼吃了三餐orz……</p>
<p>​ 物理做了关于转动惯量的实验，倒还挺好玩，就是说内容是下个星期的lecture让我们今天做实验是不是有点怪。写了巨多的Data and Analysis，然后它们提供的轮子轮辐还不是均匀的，导致传感器画出来的图就是很厚实的一块不过最后结果还算不错吧，虽然不知道实际应该是怎么样的，但和估计的差不多。然后后来想想，似乎自己计算做错了，当时赶得匆忙把两条思路搞混了，寄。</p>
<p>​ 然后物理lecture主要讲火箭发射的运算，我们教授疯狂diss隔壁chemistry（pathetic weakness），说化学反应产能效率太低，相比较而言核物理的产能要高很多，笑死了。</p>
<p>​ MPMP今天不知道咋回事只来了六个人，然后也还是就是随便聊聊天，没啥特别。</p>
<p>3月23日</p>
<p>​ 今天起来感觉有点冷于是直接就穿羽绒服去学校了zzz</p>
<p>​ 今天先去了MUMS Room，碰到了一个穿着2020 AMT School of Excellence T恤的同学，刚进去看灯关着以为没人（结果我一开灯他人从沙发上弹了起来</p>
<p>​ AM1因为Assignment里面有后面函数/映射的内容，于是就先把后面的上了，刚开始Alex讲牛顿法求平方根，然后讲到极限的时候跟我们说don't tell your AM2 lecturer that I said this, I will be fired if they know this 笑死了。</p>
<p>​ 然后今天下午做了好多事，真好。</p>
<p>3月24日</p>
<p>​ 今天好开心，早上foc workshop还是做Kahoot，不过拿了第一，那就是好workshop（做的时候好紧张，心脏狂跳，然后结束后就在那发抖……</p>
<p>​ 下午上完物理PSC赶去参加Competition Maths Catchup，到那边有个同学，叫Jason，叫我一起做题，然后就一起在白板上做题，了解之后才知道他是去年IMO澳大利亚国家队的orz，不过我发挥还算不错吧:happy:。然后又认识了昨天那个在MUMS room碰到的那位，今天他直接穿了IMO的T恤，叫Andres，19~21年IMO Team的，去年是金牌……总之就是很开心。</p>
<p>3月25日</p>
<p>​ 物理课教授讲了一大堆奇怪的内容，反而Foc倒还不错orz</p>
<p>​ AM上玩去MUMS room， Quang邀请我们一起吃饭，想着也多熟悉熟悉别的人，于是就一起去了，吃了个鸡排，还挺好吃，就是说有点远，吃到4点10分，最后跑着回去上课orz，上完computer lab，Dougal要去一个编程比赛，我就跟着去看看，也没法参加，要赶着坐火车回家，那边有免费pizza，但是太饱了……原本是6点开始的，结果6点40才开始，然后他们开始比赛我就溜了。</p>
<p>3月28日</p>
<p>​ 早上起的有点早，留了太多提前量结果8点多一点就到了，早上在Box Hill火车站还发了饼干，公交车到Camberwell刚好看见热气球升空，到学校就去MUMS坐了一会儿，吃了一块早上坐车送的饼干，一言难尽。然后workshop做一些Telstra Creator Space的Training，很烦……</p>
<p>​ 下午数学practical中间induction顿了一会儿，最后几分钟硬赶赶完了，然后下课就又发现错了，倒是老师没看出来，说是方法很妙，实际上就是个错误答案orz，打出来给大伙乐乐: <span class="math display">\[
8^{n+1}-3·8^n+2=(8^n-2)(8-1)\equiv0\pmod 7
\]</span> ​ 笑死有人天天做错题目我不说是谁<span class="github-emoji" data-alias="laughing" style="" data-fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span>。</p>
<p>3月29日</p>
<p>​ 早上物理实验差点没笑死过去，一开始实验Matlab崩了，然后换了台电脑，实验是两个求g的值，第一个利用圆周运动的critical speed，critical state属于是非常难判断了，第一遍做下来出来17点几，然后画图的时候发现要换半径再做实验，结果出来我们的g和r成正比，笑死，然后不停换r，不停改数据最后放弃了，算出来个21点几的g，然后另一个实验就没时间做了，就是草草的测了几回，是测量轨迹圆形的物体的周期来求g，这个倒是出来10点几，只是没空分析什么了……</p>
<p>​ 物理lecture在已经把rotation的几个实验全部做完之后总算开始讲rotation了，也挺离谱的，而且讲的贼快orz</p>
<p>​ 然后下午还去了Telstra Creator Space参加Training，里面确实挺帅，不过做完training最大的感想就是我不想学engineering了，我属于是离了钻床就不会给金属钻孔了。然后Luca也参加同一个training，他人真好。</p>
<p>3月30日</p>
<p>​ AM lecture结束出来看见Glyn Davis门口站满了人，消防车也来了，碰到Uri问发生了啥，他说上课刚讲到重要的地方突然响了火灾警报，然后都出来了……</p>
<p>​ 然后到图书馆做了一会儿AM的Assignment，差点没绷住orz，灰溜溜做物理去了，反转了，物理也没绷住……这物理自动修正保留位数属实是sb，动不动数字打到一半变成科学计数法或者多出几位小数，属于是看不懂……</p>
<p>3月31日</p>
<p>​ 很充实的一天，物理PSC结束后在教室一直跟Dougal聊（学）到7：30，前面还在学一些课内的内容，后来有个同学跑过来了解我们情况，然后问到Dougal他学的东西，于是Dougal就开始跟我们讲音频处理，那个同学走了之后，Dougal一路跟我讲傅里叶变换，拉普拉斯变换，Z变换，双线性变换，离散傅里叶变换，快速傅里叶变换……然后就整整讲了3个小时。就是说学到很多……</p>
<p>4月1日</p>
<p>​ 这个星期的时间安排属实有一点崩，不过还好算是应付过来了，只是blog都没怎么更新，matlab等下星期吧orz，不过虽说matlab一点准备都没做，一节课下来也是把全部worksheet给做完了，包括后面的exploration，然后去问tutor，那答案也是挺离谱的，差不多就是按照要求的步骤是得不出答案的结论的，然后tutor说前面也没别的学生做到这，所以他也不清楚……</p>
<p>​ 然后拉着Dougal晚上去参加了MUMS game night, Uri也来了，一开始下了一会儿chess，然后几个人试图解一个puzzle，失败了……</p>
<p>4月4日</p>
<p>​ 早上Compulsory的workshop去TCS领+装了个传感器，也不知道搞什么用的……有点迷惑。然后AM1的Lecture Alex在那疯狂赶进度，差不多讲一点跳一段（讲（跳）了19页slide），tutorial的内容差不多已经彻底超过上周lecture的进度了……然后tutorial我们组就我和Dougal，一路做下去都很顺利，就是说做完也没剩多少时间了。</p>
<p>​ 晚上火车上碰到Luna，她说有concert所以比较晚，然后也就是打了下招呼也没聊什么……</p>
<p>4月5日</p>
<p>​ 早上物理实验做Resonance，结果实验室门到10：07才开，我们人排队一直排到两层楼中间，实验倒还算不错，到最后Tutor说我们可以绘制frequency-volume graph然后让扬声器从低频率到高频率全部放一遍，图上的peak就是resonance frequency。就是说我写report的速度是真的慢，一直54分才出来（还是tutor让我赶紧走）。出来碰到Dougal，他说他一开始就想到可以用f-v graph，他们组就是那么做的，他还说可以直接用白噪音，一次性把全部frequency都能测出来。</p>
<p>​ 物理又开始跑题了，然后MPMP也没发生什么……补一下上个星期Matlab……</p>
<p>4月6日</p>
<p>​ Alex回头把上节课跳过的例题给补完了，还是没讲到Basis……</p>
<p>​ 今天好困啊，早点溜了算了……</p>
<p>4月7日</p>
<p>​ 早上有点困，Foc workshop结束去MUMS room睡了一觉，然后AM1今天讲了几个显然又有点不好证明的结论，之后在图书馆和Uri聊了会儿天结果就没时间做物理PSC，就比较尴尬……</p>
<p>​ 晚上去了Competition Maths Catchup，拉了Dougal一块去，也还是很快乐，中间有道题，我们一开始枚举法误入歧途，Dougal说他想编个程序来算，然后没带电脑就用手机写，后来程序写是写出来了，写了好长一段，然而就是说输出不了东西orz，8点左右隔壁传来钢琴的声音，然后集体跑去观摩，笑死……然后后来一直到八点半多才走，出来之后Dougal跟我说，今天在这里三个小时，一道题都没做出来，噗哧。</p>
<p>4月8日</p>
<p>​ 还是有点困，于是物理lecture就拿来睡觉了，上完AM的lecture去MUMS room碰到几个人在下chess，有个是中国人，问我学啥，然后一直在那里重复‘Young man’……然后后来computer lab他还跑到我们课上，不知道干啥。computer lab内容没多少，做完之后Dougal就用matlab给我演示那些变换，画<a href="https://en.wikipedia.org/wiki/Butterworth_filter">Butterworth filter</a>（巴特沃斯滤波器/最大平坦滤波器）有关的函数，然后又延申到别的滤波器，看到chebyshev filter之后我给他讲Chebyshev不等式，他给我讲Chebyshev polynomial的近似。</p>
<p>​ 晚上把新出来的AM1 Assignment给做了，最后一题差点翻车，吓死……</p>
<p>4月11日</p>
<p>​ 早上收到邮件，science workshop的tutor阳性，然后今天不来了，于是我们workshop就没有tutor了……然后它内容也是极少，只是下载个数据然后画个图，十几分钟就搞定了，于是既没老师又没事干然后就早早地溜了……</p>
<p>​ 结果Computing的mst崩了，其他题目都挺快，十几分钟做完了，第二题叫我把while len(str(x))转换成for loop，结果没想到有break……也没想到可以设置默认参数调用原函数，于是就寄了……</p>
<p>​ 突然发现discord居然用的markdown语法……真好。</p>
]]></content>
      <categories>
        <category>生活馆</category>
      </categories>
      <tags>
        <tag>-- 日记</tag>
      </tags>
  </entry>
</search>
